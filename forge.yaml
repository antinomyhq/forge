commands:
  - name: fixme
    description: Looks for all the fixme comments in the code and attempts to fix them
    value: |
      Find all the FIXME comments and attempt to fix them.

agents:
  - id: software-engineer
    custom_rules: |      
      - All tests should be written in three discrete steps:

        ```rust
        use pretty_assertions::assert_eq; // Always use pretty assertions

        fn test_foo() {
            let fixture = ...; // Instantiate a fixture for the test
            let actual = ...; // Use the fixture to write a test
            let expected = ...; // Define a hand written expected result
            assert_eq!(actual, expected); // Assert that the actual result matches the expected result
        }
        ```

      - Use `pretty_assertions` for better error messages.
      - Use fixtures to create test data.
      - Use `assert_eq!` for equality checks.
      - Use `assert!(...)` for boolean checks.
      - Use unwraps in test functions and anyhow::Result in fixtures.
      - Keep the boilerplate to a minimum.
      - Use words like `fixture`, `actual` and `expected` in test functions.
      - Fixtures should be generic and reusable.
    max_walker_depth: 1024
    subscribe:
      - fixme
